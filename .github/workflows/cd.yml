name: Universiteams CD

on:
  push:
    branches:
      - main
      - continuous-delivery
    tags:
      - v*.*.*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://api.universiteams.com
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Avoid caching this image as it will break ci workflows buildx base image cache
      - name: Build and publish prod image with cached base image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: prod
          push: true
          tags: universiteams/api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
      - name: Create production .env file
        run: |
          chmod +x ./create-env-file.sh
          ./create-env-file.sh POSTGRES_USER=${{secrets.POSTGRES_USER}} POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} ACCESS_TOKEN_SECRET=${{secrets.ACCESS_TOKEN_SECRET}} REFRESH_TOKEN_SECRET=${{secrets.REFRESH_TOKEN_SECRET}} EMAIL_VERIFICATION_LINK_SECRET=${{secrets.EMAIL_VERIFICATION_LINK_SECRET}} FORGET_PASSWORD_VERIFICATION_LINK_SECRET=${{secrets.FORGET_PASSWORD_VERIFICATION_LINK_SECRET}} EMAIL_USER=${{secrets.EMAIL_USER}} SENDGRID_API_KEY=${{secrets.SENDGRID_API_KEY}} SENDINBLUE_API_KEY=${{secrets.SENDINBLUE_API_KEY}}
      - name: Copy .env and docker-compose.prod.yml to server filesystem
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          source: ./docker.env,./docker-compose.prod.yml
          target: ~/
      - name: Connect to server by ssh in order to create traefik directory if not exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: mkdir -p traefik
      - run: ls
      - name: Copy traefik dynamic config to server filesystem
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          source: "./traefik/traefik.dynamic.yaml"
          target: ~/traefik
      - name: Connect to server by ssh in order to bootstrap prod dependencies
        uses: appleboy/ssh-action@master
        env:
          USER_PASSWORD: ${{ secrets.SERVER_USER_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          envs: USER_PASSWORD
          script: |
            echo $USER_PASSWORD | sudo -S su
            sudo docker-compose -p prod -f docker-compose.prod.yml down
            sudo docker pull universiteams/api:latest
            sudo docker-compose -p prod -f docker-compose.prod.yml up --detach --remove-orphans
