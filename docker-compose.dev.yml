version: '3.8'

services:
  reverse-proxy:
    image: traefik:v2.6
    command: 
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    ports:
      - 80:80
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - app
  app:
    build: 
      context: .
      target: dev
    image: alereca/universiteams:1.0
    ports:
      - 3000
      - 9229:9229
    command: npm run start:debug
    working_dir: /home/node/app
    volumes:
      - ./src:/home/node/app/src
      - ./test:/home/node/app/test
      - ./dist:/home/node/app/dist
    env_file:
      - docker.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`api.localhost`)
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres:12.8-alpine
    # Currently there is no need to expose this container port to host, since every interaction happens between containers
    ports:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - docker.env
  # Pg-admin won't be used in production
  pg-admin:
    image: dpage/pgadmin4:5.6
    ports:
      - 6000
    volumes:
      - pgadmindata:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pg-admin.rule=Host(`db.localhost`)
    depends_on:
      - postgres
  redis:
    image: redis:alpine
    ports:
      - 6379

volumes:
  pgdata:
  pgadmindata:
